syntax = "proto3";

package crossfi.treasury;

option go_package = "github.com/crossfichain/crossfi-node/x/treasury/types";

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

// Msg defines the Msg service.
service Msg {
  rpc Mint(MsgMint) returns (MsgMintResponse);
  rpc Burn(MsgBurn) returns (MsgBurnResponse);
  rpc ChangeOwner(MsgChangeOwner) returns (MsgChangeOwnerResponse);
}
message MsgMint {
  string creator = 1;
  string amount = 2 [
    (cosmos_proto.scalar) = "cosmos.Coin",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.nullable) = false
  ];
}

message MsgMintResponse {}

message MsgBurn {
  string creator = 1;
  string amount = 2 [
    (cosmos_proto.scalar) = "cosmos.Coin",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.nullable) = false
  ];
}

message MsgBurnResponse {}

message MsgChangeOwner {
  string creator = 1;
  string newOwner = 2;
}

message MsgChangeOwnerResponse {}
